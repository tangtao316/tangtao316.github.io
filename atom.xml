<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[汤涛的博客]]></title>
  <subtitle><![CDATA[关注Android最佳实践]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://tangtao.me/"/>
  <updated>2015-12-13T08:42:53.000Z</updated>
  <id>http://tangtao.me/</id>
  
  <author>
    <name><![CDATA[汤涛]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://tangtao.me/2015/12/13/%E8%87%B4%E7%A8%8B%E5%BA%8F%E5%91%98%E7%88%B8%E7%88%B8/"/>
    <id>http://tangtao.me/2015/12/13/致程序员爸爸/</id>
    <published>2015-12-13T08:42:53.000Z</published>
    <updated>2015-12-13T08:42:53.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1263819-0ffbabf6f3a15d69.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="扎克伯格与家人"></p>
<p>认识我的人都知道我有一个非常可爱的女儿，在女儿出生成长的这几年，更多是她的妈妈在独自照顾，作为这个家庭一员的程序员出身的爸爸，一方面对家庭抱有歉意，另一方面，却越来越有一种无力感，对宝宝，对家庭，对未来。</p>
<p>我对女儿最大的期望是她能健康快乐的成长，她的安全问题一直是我最重视的。从小到大，在各种能力范围内给她提供最安全的成长环境，家里各种危险物品都锁好，时刻注意危险的家具摆放，各种尖角贴上防撞条，防护措施一大堆，即便是这样还是出过几次不大不小的意外，每次都让我心惊不已。但总归只是一个小小的蜗居，考虑细致总能处理好。</p>
<p>然而眨眼间她就长大了，要上幼儿园了，她的世界更大了，我和她妈妈不可能寸步不离，像以前那样小心照顾了，这开始让我感到焦虑：在幼儿园里有老师我尚且放心，但刚开始一段时间校车尚未开通，往返幼儿园的路上又开始担心，我甚至仔细分析过怎么走能尽量避开危险路段，减少交通事故发生的概率。我非常严肃地跟她妈妈解释每天少过一条马路，能降低多少危险发生的概率，然而她不爱听这些。</p>
<p>我仍然不停计算着一切，就像我在每天工作中所做的那样，事情总是可以计划的，问题总是有原因的，风险总是可以预见与避免的，万事总是有逻辑的。</p>
<p>但是渐渐地，我发现我的努力并没有带来多大的帮助，她还是避免不了磕磕碰碰，大伤没有但小伤不断，感冒咳嗽不停，有些我能知道原因，有些根本无从知晓，更多的情况是知道但并没有什么卵用，幼儿园的小孩子那么多，感冒传染磕磕碰碰怎么能完全避免？况且总有一天她会长大，会离开你，到时候你除了是一个啰里啰嗦的爸爸，又能帮助她什么？</p>
<p>多年前身边有一位非常优秀的开发同事被人问道：“你觉得做程序员最大的乐趣是什么？”，“那种控制整个世界的感觉吧，仿佛无所不能。” 他略带腼腆的回答道。</p>
<p>是啊，在代码的世界里，我们像造物主一样，无所不能，没有做不到的事情，可惜我们的生活里不只有代码，我们真实地生活在这个世界，有着各种各样的烦恼，绝大部分人都还是Hard模式。</p>
<p>这个世界也远比我们想象中的复杂，我们不是上帝，无法像控制代码世界一样，精确控制我们自己的生活。虽然代码写得越久，越容易产生一种我们可以的错觉。</p>
<p>也许也有很多人跟我一样，偶尔迷失在代码与现实之中，控制欲延伸到生活里，不能忍受自己的命运有太多的不确定性。对于这样的朋友，除了劝大家“尽人事，听天命”之外，我只能多说一句与大家共勉：“别胡思乱想了，有空还是多敲敲代码吧”。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1263819-0ffbabf6f3a15d69.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://tangtao.me/2015/12/13/15%E4%B8%AA%E5%BF%85%E7%9F%A5%E7%9A%84Android%E5%BC%80%E5%8F%91%E8%80%85%E9%80%89%E9%A1%B9/"/>
    <id>http://tangtao.me/2015/12/13/15个必知的Android开发者选项/</id>
    <published>2015-12-13T08:39:31.000Z</published>
    <updated>2015-12-13T08:39:31.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1263819-664b39cebbfacbe2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>Android开发者选项，看起来很简单的事情，其实很多同学对它了解得不够，Google用心良苦得为我们设计了这么多小开关都是有它的作用的，今天也花了点时间，过了一遍全部的30多个开关，从中整理出15个对日常Android开发比较有帮助的选项。</p>
<p>需要指出的是，不同的ROM对开发者选项的支持不一样，精简掉一些很正常，我下面提到的都是官方支持的功能，当然不同的官方版本支持程度也不一样，你手机上找不到也别奇怪。</p>
<p>抱歉这里不介绍开发者选项在哪怎么开启之类的问题。</p>
<ol>
<li><p>Stay awake<br>充电时保持屏幕唤醒，开发的时候，时不时的锁屏真是够了，开启它后只要插着USB线就不需要总去解锁屏幕啦。</p>
</li>
<li><p>Select runtime（Dalvik or ART）<br>ART runtime下你的应用会更加丝滑，目前高版本的Android上已经直接是ART runtime了，但作为Android开发也许需要保证你的应用在两种runtime下都能正常运行，这可能是测试时需要更多考虑的。</p>
</li>
<li><p>Process stats<br>里面有关于当前运行进程的一切信息，对于一般用户，它就是一堆无意义的数字，对于Android开发人员来说，调试时这些信息也许可以帮你大忙。</p>
</li>
<li><p>USB debugging<br>这个无需介绍，不开它怎么调试呢？（虽然现在都流行无线调试了）</p>
</li>
<li><p>Allow mock locations<br>当你的应用需要用到GPS功能，获取位置信息时（比如天气应用），可以通过它搭配一些位置模拟应用，模拟全球任何地点。（还能干什么？机智的你肯定想到啦）</p>
</li>
<li><p>Show surface updates<br>在界面绘制时，闪烁提醒，开启它后简直能闪瞎你的眼睛，但有时候我们需要精确知道具体的界面绘制细节时，不得不需要忍受这种折磨。</p>
</li>
<li><p>Show layout bounds<br>显示布局格子，当你看到一个应用有很棒的界面效果，想知道它是怎么布局的？开启这个功能即可。我更常用的使用场景是：每当有PM过来问我人家这个界面是Native实现的，还是类似Hybrid方案的Web实现时，我就让他开启这个功能，WebView是一个整体的格子，Native View是各种小格子组合而成。（除非自己重绘实现自定义View, 一般复杂布局也不会这么干）<br><img src="http://upload-images.jianshu.io/upload_images/1263819-a516d14838dec97e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</li>
<li><p>Force RTL layout direction<br>强制RTL布局，RTL也就是Right To Left，阿拉伯国家一般有这种文化，类似古时候的中国，文字从右往左读，包括界面布局也是从右往左的，感觉操作习惯都跟我们是镜像的，如果你跟我一样不幸需要做这种坑爹适配的话，这也是必须掌握的技能。</p>
</li>
<li><p>Animation scale<br>动画的尺度、速度调整也是很有用的功能，尤其在实现复杂的组合动画效果时，调慢点可以看得更清楚，当然你可以在自己代码里调慢，但每次改代码重新build很麻烦对不对？而且如果是PM走过来让你研究一下某款App的酷炫动画效果呢？</p>
</li>
<li><p>Simulate secondary displays<br>它允许你模拟不同屏幕尺寸下应用的表现，IDE里虽然也有类似的功能，可那毕竟只是个静态的效果。</p>
</li>
<li><p>Debug GPU overdraw<br>这里是指不正确的过度绘制：</p>
<ul>
<li>原色: 没有过度绘制</li>
<li>蓝色: 一次过度绘制</li>
<li>绿色: 两次过度绘制</li>
<li>粉色: 三次过度绘制</li>
<li>红色: 四次及以上过度绘制。<br>值得提醒的是，过度绘制有时是无法避免的，Android建议是不要超过一次过度绘制，也就是可以是蓝色的，不能绿了。<br><img src="http://upload-images.jianshu.io/upload_images/1263819-3fb365b92e54df0f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
</li>
<li><p>Strict mode enabled<br>严苛模式下，当应用做了一些影响性能的事情，屏幕会闪一下提醒你。你也可以在代码里为自己的应用开启严苛模式，一旦发现一些性能问题，就会有详细Log输出, 为避免影响线上用户，建议只在Debug模式下开启。</p>
</li>
<li><p>Show CPU usage<br>在你屏幕右上角显示一个小窗口，提示当前CPU的各种信息，在性能调试时会有一些帮助，看是否是CPU的负载过高导致了性能问题。<br><img src="http://upload-images.jianshu.io/upload_images/1263819-d1b90c28b6cce229.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</li>
<li><p>Profile GPU rendering<br>看下面这张图，就明白它的作用了，开启后，会在下方显示一张实时绘制图，记住那条绿线是性能流畅与否的底线，超过的时刻就会出现掉帧，就会有卡顿的感觉，界面性能调优的一个最重要指标就是将所有界面操作尽量优化到那条绿线以下。具体的原理可以看胡凯同学的Android性能优化典范，我的公众号里也收录了他这篇经典文章。<br><img src="http://upload-images.jianshu.io/upload_images/1263819-44586fb556d9244f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</li>
<li><p>Don’t keep activities<br>开启这个选项后，当你从Activity A跳转到Activity B时，Activity A就会被立即销毁，这一般用来模拟设备内存不足时后台Activity被销毁的场景，如果你的应用能做到开启它时功能仍基本正常，说明代码设计得比较合理，不同Activity之间的耦和很低，对于复杂业务的应用来说，能做到这点真心不容易。</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://upload-images.jianshu.io/upload_images/1263819-664b39cebbfacbe2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://tangtao.me/2015/12/13/%E5%A6%82%E4%BD%95%E5%A7%BF%E5%8A%BF%E6%AD%A3%E7%A1%AE%E5%9C%B0%E5%BC%80%E5%A7%8B%E4%B8%80%E4%B8%AAAndroid%E9%A1%B9%E7%9B%AE/"/>
    <id>http://tangtao.me/2015/12/13/如何姿势正确地开始一个Android项目/</id>
    <published>2015-12-13T08:39:31.000Z</published>
    <updated>2015-12-13T08:39:31.000Z</updated>
    <content type="html"><![CDATA[<p>我将知乎上两个相关问题的回答整理统一一下，方便大家阅读。<br><a href="http://www.zhihu.com/question/37433825/answer/73556099" target="_blank" rel="external">Android 开发：开始一个项目前，做好哪些准备可以事半功倍？</a><br><a href="http://www.zhihu.com/question/27140400/answer/73744455" target="_blank" rel="external">Android开发时你遇到过什么相见恨晚的工具或网站？</a></p>
<p>统一回答：<br>这个问题确实比较大，我单从技术的角度分几个方面来谈一下：</p>
<ol>
<li><p>首先是项目框架，特指代码的组织方式，一个清晰优雅的框架简直让人神清气爽，这方面知乎上已经有很多文章，不再赘述。参见<a href="http://www.zhihu.com/question/35009721" target="_blank" rel="external">在Android开发过程中搭建一个自己的应用框架有几个步骤？需要注意什么？</a></p>
</li>
<li><p>其次是开源框架，这里指的是Android开发中经常用到的第三方开源框架的组合，有很多选择，我个人推荐：</p>
<ul>
<li>UI: 各种开源控件,可以在这里找 Trinea/android-open-project · GitHub</li>
<li>依赖注入：Dagger + ButterKnife</li>
<li>图片加载：Picasso</li>
<li>网络请求: Retrofit + OkHttp+Gson</li>
<li>数据库访问: Content Provider + Schematic, 或某款orm</li>
<li>消息事件队列：otto</li>
</ul>
</li>
<li><p>最后是各种免费好用的第三方开发者服务，我主要做海外市场，也做过国内市场，每个类别尽量只推荐一个，太多选择就是没有选择：</p>
<ul>
<li><p>统计分析<br>国内：Talking Data<br>国外: Flurry, 国外统计分析系统的标杆，免费的。</p>
</li>
<li><p>Crash分析<br>国内: 腾讯Bugly, 号称全球唯一自带ANR收集，其实原理很简单，不知别家为何不做。<br>国外: Crashlytics, 已经收归Twitter Fabric开发者工具集，免费好用。</p>
</li>
<li><p>推送<br>国内: LeanCloud，这个没实际用过，身边朋友反馈很好。<br>国外: Parse, 正如覃超所说,FB也在用，30qps免费限制，一般中小应用够用。</p>
</li>
<li><p>分享<br>国内: ShareSDK，专业做社交分享。<br>国外: 各社交平台自家SDK, 注意不同国家主流社交平台不同。</p>
</li>
<li><p>评论<br>国内：畅言, 基本抄的Disqus, 免费，算是良心产品了。<br>国外：Disqus, 基本不用考虑其他家的，虽然确实有竞品。</p>
</li>
<li><p>广告变现<br>国内：百度 or 广点通，两个效果差不多。<br>国外：FB or Google，做native广告，效果最佳。</p>
</li>
<li><p>支付<br>国内: 支付宝, 微信<br>国外: payssion, 专业做海外跨境收款的，能省很多事。</p>
</li>
<li><p>短信验证<br>国内：没用过，Google找一家最便宜的就行。<br>国外：Fabric Digits, twitter出品，居然不要钱。</p>
</li>
<li><p>灰度测试<br>国内：AppAdhoc，移动AB测试国内最专业的一家。<br>国外：optimizely, 支持Android, iOS, 直接在线改UI做AB测试, 三观都要颠覆了。</p>
</li>
<li><p>云测<br>国内：百度云测试。<br>国外：test in, 其实百度的也跑，国内的Android设备都卖到国外去了。</p>
</li>
<li><p>客服<br>国内：微客服, 有免费额度，中小应用够用。<br>国外：helpshift，国外最专业的客服平台。</p>
</li>
<li><p>推广<br>国内：这个真不了解。<br>国外：Appsflyer, 海外推广为数不多的选择之一。</p>
</li>
<li><p>可视化分析<br>国内：growingio, 还在内测中，linkedin数据分析大牛回国创业，据说黑科技，可以直接在app上实时查看各种转化率数据。<br>国外：appsee, 绝对黑科技，PM最爱，转化率什么的再也不怕上不去了，用过后我们团队成员一致好评，在我的微信公众号AndroidTrending里有专门文章介绍使用体验。</p>
</li>
</ul>
</li>
</ol>
<p>最后，给大家介绍传说中的Android军火库，我很多东西都是在这里面找的。<br>国内: <a href="http://www.devstore.cn" target="_blank" rel="external">DevStore</a><br>国外: <a href="http://www.android-arsenal.com" target="_blank" rel="external">Android Arsenal</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我将知乎上两个相关问题的回答整理统一一下，方便大家阅读。<br><a href="http://www.zhihu.com/question/37433825/answer/73556099" target="_blank" rel="external">Android 开]]>
    </summary>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://tangtao.me/2015/12/13/TwinPrime--%E7%94%A8%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%BC%98%E5%8C%96Android%E7%BD%91%E7%BB%9C/"/>
    <id>http://tangtao.me/2015/12/13/TwinPrime--用机器学习优化Android网络/</id>
    <published>2015-12-13T08:39:31.000Z</published>
    <updated>2015-12-13T08:39:31.000Z</updated>
    <content type="html"><![CDATA[<p>这篇文章是我关于<a href="http://www.zhihu.com/question/29466887/answer/74161769" target="_blank" rel="external">《Android开发如何进行网络优化》的回答</a>，这个问题里已经有一个我觉得不错的答案，一些常规实用的优化方案，大家有兴趣的话可以去知乎围观。我这里从另外一个角度给大家讲讲目前我们正在尝试的一款高大上的移动网络优化产品。</p>
<p>以下是我的回答:</p>
<p>我来说点高大上的：用机器学习来做Android/iOS应用的网络优化，也就是TwinPrime。<br>TwimPrime是一家美国创业公司，国内媒体唯一一次关注它也就是它融资950万刀的故事，我给大家讲讲它究竟为啥能拿到这笔钱，以及它背后的故事。</p>
<h1 id="u7535_u68AF_u6F14_u8BB2_u65F6_u95F4"><a href="#u7535_u68AF_u6F14_u8BB2_u65F6_u95F4" class="headerlink" title="电梯演讲时间"></a>电梯演讲时间</h1><p>一句话概括：TwimPrime解决了移动网络“最后一英里”的交付问题。下面我大概解释下。</p>
<p>当前移动设备使用率超过PC已成共识，但移动设备的网络性能比之PC糟糕许多。对移动网络进行优化已是必然趋势。传统的网络优化手段之一就是CDN, 依靠部署在各地的边缘服务器，通过中心平台的分发调度，使用户就近获取所需内容，降低网络拥塞，提高用户访问速度。然而这一切在无线时代却存在硬伤，移动网络之所以这么慢，其实是移动运营商到移动设备之间的网络性能瓶颈导致的。根据统计70%的延迟都发生在这所谓的最后一英里，目前的CDN方案解决不了这个问题。</p>
<h1 id="u4E3A_u4EC0_u4E48_u4E0D_u662FCDN_3F"><a href="#u4E3A_u4EC0_u4E48_u4E0D_u662FCDN_3F" class="headerlink" title="为什么不是CDN?"></a>为什么不是CDN?</h1><p>CDN其实是PC时代的产物，PC相较移动设备的特征之一就是稳定，你家的电脑不会跟着你到处走，它的网络也因此相对稳定，电脑的性能也比手机强，也不像手机种类那么分化，而手机则不一样，它有WIFI及各种运营商的场景，它的位置在不断变化，设备与操作系统也种类繁多。</p>
<h1 id="TwinPrime_u600E_u4E48Work_3F"><a href="#TwinPrime_u600E_u4E48Work_3F" class="headerlink" title="TwinPrime怎么Work?"></a>TwinPrime怎么Work?</h1><p>集成TwinPrime SDK到你的App，它通过修改底层网络通讯基础库，定期上传最新的设备信息给TwinPrime服务器，TwimPrime根据你的设备，操作系统，位置，运营商的信息，不断优化推荐当前它认为最佳的内容转发通道给App, 使得后续App的访问速度都通过TwimPrime的转发得以优化，从而大幅度优化最终访问速度，其推荐算法本身采用机器学习的方式改进。</p>
<p>看几张图来直观理解下。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-c72c2bfb0e08649d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="移动互联网时代面临的挑战"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-de5ba317f1337f0d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="TwimPrime的解决方案"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-f0eb8a3acddc6842.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="整体方案、与CDN的关系"></p>
<h1 id="u5177_u4F53_u600E_u4E48_u7528_u5462_uFF1F"><a href="#u5177_u4F53_u600E_u4E48_u7528_u5462_uFF1F" class="headerlink" title="具体怎么用呢？"></a>具体怎么用呢？</h1><p>具体到Android SDK的集成，其实有两种选择，一种是android自带的HttpUrlConnection, 一种是OkHttp, 是的，你没有猜错，它需要我们用TwinPrime包装过的的 HttpUrlConnection, OKHttp替换原生的，从而修改通信部分，同时也支持Picasso，支持图片访问的性能优化，视频也有对应的支持方案。</p>
<h1 id="u90A3_u4E48_u8981_u94B1_u4E0D_uFF1F"><a href="#u90A3_u4E48_u8981_u94B1_u4E0D_uFF1F" class="headerlink" title="那么要钱不？"></a>那么要钱不？</h1><p>你又猜对了，他是要收费的，目前有一个月的免费试用，试用期后要收费。那你肯定会嘀咕，他怎么证明真的对我们的网络优化有帮助？有多大帮助？我已经就这个问题与TwinPrime的CTO互相交换了意见: ) 他表示收费前会帮我们调优网络，并做足够的A/B测试，提供测试数据以打消我们的疑虑。在最近一次的试用中发现它们有少量Crash, 他们已经快速修复并且提供了最新版的SDK, 目前我们打算继续尝试中。。。</p>
<p>有人又要吐槽我，能不能别老是推荐一些收费的玩意？一天到晚发软文！这个我只能说，凡事要看投入产出比，真的帮你把用户端的网络请求速度大幅度提升？这点钱又算什么？另外这真心不是软文，好东西就要分享给大家不是嘛？</p>
<p>最后我们的应用虽然主要在海外，但TwinPrime号称是支持全球的，所以理论上中国也是地球不可分割的一部分是吧？大家赶紧试试吧。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这篇文章是我关于<a href="http://www.zhihu.com/question/29466887/answer/74161769" target="_blank" rel="external">《Android开发如何进行网络优化》的回答</a>，这个问题里已]]>
    </summary>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://tangtao.me/2015/12/13/Scalpel--Jake%E5%A4%A7%E7%A5%9E%E7%9A%84%E7%AC%AC%E4%B8%89%E6%8A%8A%E5%88%80/"/>
    <id>http://tangtao.me/2015/12/13/Scalpel--Jake大神的第三把刀/</id>
    <published>2015-12-13T08:39:31.000Z</published>
    <updated>2015-12-13T08:39:31.000Z</updated>
    <content type="html"><![CDATA[<p>Jake Wharton，Android开发领域传奇一般的存在，熟悉Android开发的同学应该都听说过，即便没有，也应该会经常用到他主导或参与贡献的开源项目，他在GitHub上开源了多个Android兼容性、依赖注入相关的知名项目，目前就职Square, 也参与贡献了Square公司开源的诸如Retrofit, okhttp等热门项目。</p>
<p>Jake大神喜欢以刀命名自己的项目，可能他觉得这能很好的表达它们作为开发利器的犀利程度，不过没准他也很喜欢中国武侠小说呢。</p>
<p>他最有名的两把刀，一把是Dagger, 匕首，一个依赖注入框架，用来解耦开发中各模块依赖的，最早由他开发与维护，后来转给Google维护；另一把是同样大名鼎鼎的ButterKnife，黄油刀，有了它，你再也不用写findViewById了，以后有机会给大家详细介绍它们。</p>
<p>今天的主角是它们不那么知名的小兄弟，Scalpel，这把非常酷炫实用的解剖刀。</p>
<p>大家在Android界面开发中可能会经常碰到这样的困扰：</p>
<ul>
<li>新接手某个项目，它的界面布局复杂且乱，怎么快速了解清楚呢？</li>
<li>感觉界面布局层次太深，对性能有影响，应该 <em>  </em> 是有不合理的地方，怎么看是哪里不对呢？</li>
<li>我写的这个控件怎么就是不出来？它跑哪去了？</li>
<li>这里的局部关系是怎样的？要怎么修改才可以实现设计效果呀？</li>
</ul>
<p>是的，这时候就轮到我们的主角出场了。Scal… 啊不对，是Hierarchy Viewer，<br>Hierarchy Viewer是Android给我们提供的一款查看View Tree的小工具，通过它可以清晰的看到界面布局与层次细节，相当强大，大家应该都很熟悉它了，截张图大家感受下就好。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-7c0b2ddbce1e26e0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Hierarchy Viewer"></p>
<p>我们今天的主角Scalpel(终于轮到我出场了吗？！) 与Hierarchy Viewer有关，一句话介绍它：A surgical debugging tool to uncover the layers under your app，大家看张图就明白它能干嘛了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-7fb27568f0eb3843.gif?imageMogr2/auto-orient/strip" alt="Scalpel Demo"></p>
<p>是不是很酷？他其实就是实现了一个三维效果的界面布局层次展示，不需要手机连接开发设备，只需要简单几行代码将其集成到你的应用中，即可开启酷炫之旅，它提供的功能包括：</p>
<ul>
<li>通过setLayerInteractionEnabled(boolean)可开启与关闭此功能。</li>
<li>通过setDrawViews(boolean)可控制是否绘制View, 也就是说它可以仅仅是个简单的布局线框图，也可以是色彩丰富的真实效果图。</li>
<li>通过setDrawIds(boolean)可控制是否显示各控件的Id, 你就能知道你自己正在调试的那个控件到底在哪了？</li>
<li>通过setChromeColor，setChromeShadowColor可自定义线框图的颜色，随你喜欢。</li>
</ul>
<p>太小了看不清怎么办？布局太深了里面的怎么看？不用担心，它提供了强大的手势功能。</p>
<ul>
<li>单点触摸：可以控制其旋转角度。</li>
<li>两指垂直滑动：可以放大或缩小。</li>
<li>两指水平滑动：可以调整布局层次之间的间距，清晰看到深层次的布局结构。</li>
</ul>
<p>值得注意的是，它要求修改根布局来实现功能，如果担心对线上用户的影响，可以仅在Debug模式下将其嵌入，类似下面这样几行代码即可在你的复杂项目中将其引入：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-5796c7df6fa79101.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Sample Code"></p>
<p>其实从实用角度上来说，还是Hirearchy Viewer更强大，可为什么我们还需要Scalpel呢？除了不用找USB线连电脑外，最主要是因为它真的很酷啊，这就够了，不是吗？</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Jake Wharton，Android开发领域传奇一般的存在，熟悉Android开发的同学应该都听说过，即便没有，也应该会经常用到他主导或参与贡献的开源项目，他在GitHub上开源了多个Android兼容性、依赖注入相关的知名项目，目前就职Square, 也参与贡献了Sq]]>
    </summary>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://tangtao.me/2015/12/13/AppSee--%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E5%AE%83%E7%A5%9E%E5%99%A8%EF%BC%9F/"/>
    <id>http://tangtao.me/2015/12/13/AppSee--为什么叫它神器？/</id>
    <published>2015-12-13T08:39:31.000Z</published>
    <updated>2015-12-13T08:39:31.000Z</updated>
    <content type="html"><![CDATA[<p>我在知乎上回答了这个问题: <a href="http://www.zhihu.com/question/37433825/answer/73556099" target="_blank" rel="external">Android 开发：开始一个项目前，做好哪些准备可以事半功倍？</a>，很多粉丝因此关注过来，也有同学想让我多分享实际工作中的一些经验，比如那篇回答最后提到的彩蛋－appsee。</p>
<p>我们是在一款新闻类的产品上做的appsee尝试，今天我就给大家聊一聊这款神器以及我们实际使用后的体会。</p>
<p>appsee创办于2012年，总部在以色列的特拉维夫，运营三年以来其实一直不愠不火，已经拉到过几笔风投，目前有包括英国天然气公司在内的一些公司正在使用他们的产品，最初只提供了iOS版本，最近已经扩展支持到Android平台。</p>
<p>本质上appsee是一款统计分析产品，类似友盟，但他们的产品有其他各家国内外统计分析平台所不具备的特点。</p>
<ul>
<li>一是点击热图(Touch Heatmaps）</li>
<li>二是用户记录(User Recordings）</li>
</ul>
<h1 id="Touch_Heatmaps"><a href="#Touch_Heatmaps" class="headerlink" title="Touch Heatmaps"></a>Touch Heatmaps</h1><p>先说点击热图，它在pc时代比较流行，有成熟的技术方案，主要应用在各种web页面上，类似下面这样，利用js实现或直接集成第三方服务。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-9d4be54c1ae7241b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="PC Web热点图"><br>但随着native app发展如火如荼，目前支持native app的点击热图分析服务却很少，国外有少量几款，国内几乎没有。</p>
<p>热图分析，一方面提供了可视化的数据呈现方式，直观清晰，另一方面，也可以通过热图分析出用户的操作习惯，以此对交互作出改进，比如用户可能会习惯地点击他认为可能可以点击的地方，结果却让用户失望，这种情况我们一般很难发现，用户当时可能心里嘀咕一声就算了，但其实有时候并不真的就没影响，一些交互细节问题的积累可能让用户的不满情绪累积，从而导致用户卸载或影响产品口碑，如果能尽早发现与改进此类问题，甚至可以极大程度提升某些交互的转化率。</p>
<p>而appsee帮我们解决了这个问题，以下是效果图：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-313e6bdb8373f575.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Appsee热点图"></p>
<h1 id="User_Recordings"><a href="#User_Recordings" class="headerlink" title="User Recordings"></a>User Recordings</h1><p>appsee用户操作记录的功能其实是最具特色的，目前全球只此一家，别无二店。在它的web后台才能感受到它的强大，先放张图大家看看。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-b28da5fdb29677c0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Appsee后台"><br>我分两个方面来介绍：</p>
<h2 id="u9996_u5148_u662Fsession_u5206_u6790"><a href="#u9996_u5148_u662Fsession_u5206_u6790" class="headerlink" title="首先是session分析"></a>首先是session分析</h2><p>一个session是指用户从进入app到退出到全过程。<br>appsee 记录了整个seesion 操作录像，同时记录下每一步的操作，注意这是两个过程，它通过技术手段捕获到用户的每一个点击，滑动，按键，将其记录下来并与用户录像同步，在web后台查看屏幕录像，直接在录像上可视化这些操作，让你感觉仿佛正在观察用户的操作一样，想实际体验的可以去看下官网上的demo。</p>
<p>所有的收集动作在后台完成，对性能没有明显影响，收集到的用户数据，会在用户连接到wifi时上传。</p>
<p>在web后台可以对这些数据进行筛选，以达到精细分析的目的，比如：</p>
<ul>
<li>Crash session：可以看到每一个crash的session, 以往单凭log无法重现没有头绪的crash, 现在有了重现步骤了。</li>
<li>新用户session: 新用户用你的app, 他的使用是否符合你的期望？</li>
<li>快速退出session: 为啥总有这么多人，进来没一会就走了？是哪里出问题了？</li>
<li>忠诚用户session：忠诚用户到底喜欢我们什么？</li>
<li>长session: 使用两个小时的用户，你到底在干嘛？</li>
</ul>
<h2 id="u5176_u6B21_u662FUI_u5206_u6790"><a href="#u5176_u6B21_u662FUI_u5206_u6790" class="headerlink" title="其次是UI分析"></a>其次是UI分析</h2><p>是指对每个app界面进行单独统计分析，包括:</p>
<ul>
<li>点击热图：到底喜欢点哪里呢？</li>
<li>平均停留时长: 用户是有多喜欢在这呆？</li>
<li>交互占比: 用户在这个界面的操作是有多频繁？</li>
<li>从哪里来: 用户都是从哪些界面到这里来的，分别占比多少？</li>
<li>到哪里去: 用户从这个界面去了哪里，分别占比多少？</li>
<li>退出率：用户从这个界面退出app的占比是多少？还能改进吗？</li>
</ul>
<h1 id="Q__26amp_3B_A_uFF1A"><a href="#Q__26amp_3B_A_uFF1A" class="headerlink" title="Q &amp; A："></a>Q &amp; A：</h1><h2 id="Q_3A__u7528_u6237_u77E5_u9053_u8FD9_u4E8B_u5417_uFF1F"><a href="#Q_3A__u7528_u6237_u77E5_u9053_u8FD9_u4E8B_u5417_uFF1F" class="headerlink" title="Q: 用户知道这事吗？"></a>Q: 用户知道这事吗？</h2><p>A: 这得看你的节操，用户可能没法接受你这种做法，即便你的本意只是为了更好的改进产品。因此建议明确告知用户你们会采样收集数据，并且确保不会定位到具体个人，很多用户还是愿意帮你的。</p>
<h2 id="Q_3A__u7528_u6237_u8F93_u5165_u7684_u9690_u79C1_u4FE1_u606F_u88AB_u4F60_u4EEC_u770B_u5230_u4E86_u548B_u529E_uFF1F"><a href="#Q_3A__u7528_u6237_u8F93_u5165_u7684_u9690_u79C1_u4FE1_u606F_u88AB_u4F60_u4EEC_u770B_u5230_u4E86_u548B_u529E_uFF1F" class="headerlink" title="Q: 用户输入的隐私信息被你们看到了咋办？"></a>Q: 用户输入的隐私信息被你们看到了咋办？</h2><p>A: 好在appsee已经帮我们考虑了这些，默认情况下，所有带有键盘操作的部分都会被抹去。</p>
<h2 id="Q_3A__u4F1A_u5426_u5F71_u54CD_u6027_u80FD_uFF1F"><a href="#Q_3A__u4F1A_u5426_u5F71_u54CD_u6027_u80FD_uFF1F" class="headerlink" title="Q: 会否影响性能？"></a>Q: 会否影响性能？</h2><p>A: 根据我们的实际使用测试，发现appsee确实如它自己声称的那样，对性能几乎没有影响。但一旦开启此功能，还是会有些耗电的，因为要录像，当然你也可以选择只收集操作记录，不录像。</p>
<h2 id="Q_3A__u91C7_u6837_u6BD4_u4F8B_u662F_u600E_u6837_u7684_uFF1F"><a href="#Q_3A__u91C7_u6837_u6BD4_u4F8B_u662F_u600E_u6837_u7684_uFF1F" class="headerlink" title="Q: 采样比例是怎样的？"></a>Q: 采样比例是怎样的？</h2><p>A: 默认采集10%的用户数据，可以调到100%，当然你也可以选择只收集crash用户的、只收集三星手机的、只收集新用户的、或其他任意定制的。</p>
<h2 id="Q_3A__u90A3_u4E48_u8BF7_u95EE_u8FD9_u4E48_u597D_u7528_u7684_u4E1C_u897F_uFF0C_u5356_u591A_u5C11_u94B1_u5462_uFF1F"><a href="#Q_3A__u90A3_u4E48_u8BF7_u95EE_u8FD9_u4E48_u597D_u7528_u7684_u4E1C_u897F_uFF0C_u5356_u591A_u5C11_u94B1_u5462_uFF1F" class="headerlink" title="Q: 那么请问这么好用的东西，卖多少钱呢？"></a>Q: 那么请问这么好用的东西，卖多少钱呢？</h2><p>A: 哈哈，免费试用15天，15天之后要想再用，得交钱，官网上没写价钱，好在我已经帮各位问到了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1263819-190967b58d00efcf.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Appsee价格"><br>觉得贵？试用一下又不要钱，赶紧来试试吧！提醒各位它会认你的包名的，别指望换个新账号又能接着用，时间一到不交钱所有数据都没法访问的，别问我为什么知道这么多－ －！</p>
<p>值得一提的是AppSee最近被Twitter引入了著名的Fabric工具集，有大厂给它背书，各位应该可以放心使用了吧。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我在知乎上回答了这个问题: <a href="http://www.zhihu.com/question/37433825/answer/73556099" target="_blank" rel="external">Android 开发：开始一个项目前，做好哪些准备可以]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android面试经验分享]]></title>
    <link href="http://tangtao.me/2015/12/09/Android%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB/"/>
    <id>http://tangtao.me/2015/12/09/Android面试经验分享/</id>
    <published>2015-12-09T10:50:37.000Z</published>
    <updated>2015-12-09T11:37:09.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>   这是我在知乎上关于<a href="http://www.zhihu.com/question/19765032/answer/74361190" title="回答" target="_blank" rel="external">《面试时，问哪些问题能试出一个Android应用开发者真正的水平？》的回答</a>，大家感觉有些帮助，就收录在博客中，以下是我的回答：</p>
</blockquote>
<p>　　一般面试时间短则30分钟，多则1个小时，这么点时间要全面考察一个人难度很大，需要一些技巧，这里我不局限于回答题主的问题，而是分享一下我个人关于如何做好Android技术面试的一些经验：</p>
<h1 id="u9762_u8BD5_u524D_u7684_u51C6_u5907"><a href="#u9762_u8BD5_u524D_u7684_u51C6_u5907" class="headerlink" title="面试前的准备"></a>面试前的准备</h1><h2 id="1-__u7B80_u5386_u8C03_u67E5"><a href="#1-__u7B80_u5386_u8C03_u67E5" class="headerlink" title="1. 简历调查"></a>1. 简历调查</h2><p>　　简历到你手上的时候，你要做好充分的调查分析，不仅仅是对公司负责，也是对自己与候选人时间的尊重，明显不match的简历，就不要抱着“要不喊过来试试看”的想法了，候选人也许很不错，但如果跟你的岗位不match, 也不要浪费大家时间，你要想清楚现在需要的人是有潜力可以培养的，还是亟需帮忙干活的。另外如果简历里附带了博客链接，GitHub地址，相关作品的，可以提前去看看，直接看人家多年积累的文章与代码，比这短短一小时的面试来得靠谱的多。</p>
<h2 id="2-__u51C6_u5907_u95EE_u9898"><a href="#2-__u51C6_u5907_u95EE_u9898" class="headerlink" title="2. 准备问题"></a>2. 准备问题</h2><p>　　了解清楚候选人背景后，要根据简历，有针对性的准备问题，可以是他作品或做过项目里的某个技术细节的实现方式，也可以是他声称精通的某些领域的相关问题。总之不要等到面试过程中现想问题，特别是刚开始面试别人的同学，往往经验不足稍带紧张导致大脑短路，其实也是很尴尬的，把要问的问题提前写下来，准备充分。</p>
<h1 id="u8003_u5BDF_u54EA_u4E9B_u70B9_3F"><a href="#u8003_u5BDF_u54EA_u4E9B_u70B9_3F" class="headerlink" title="考察哪些点?"></a>考察哪些点?</h1><h2 id="1-__u7B80_u5386_u662F_u5426_u771F_u5B9E"><a href="#1-__u7B80_u5386_u662F_u5426_u771F_u5B9E" class="headerlink" title="1. 简历是否真实"></a>1. 简历是否真实</h2><p>　　这其实是面试第一要务，面试的过程其实就是看简历是否属实的过程，因为能到面试环节，说明这个人是符合要求的，不满足要求的早就被剔除了，如果他真的如简历描述的那样，100%会招过来，如果人人都如此，那就不需要有面试这种过程了。</p>
<p>需要注意的是这里的真实有三层含义：</p>
<ul>
<li><p>一是他如实描述了自身经历，很多人只在一些大项目里做一个很小的螺丝钉，但简历里往往夸张这段经历。</p>
</li>
<li><p>二是不知道自己不知道，常见于简历里各种“精通”开头的描述，因为知识体系与视野的局限，明明只是了解很浅却夸口精通，很多时候他并不认为自己说的有问题，而是真的以为自己已然精通，有点井底之蛙的感觉。</p>
</li>
<li><p>三是简历里的真实要与你的期望相匹配，一门技术了解到怎样的程度才算精通，很难有定论，所以这里的“真实”只能是候选人与面试官标准之间的契合，这种有主观运气成分，也许面试官水平不够错误判断了你，也不用感到不爽，面试何尝不是种双向选择呢。</p>
</li>
</ul>
<h2 id="2-__u6280_u672F_u7684_u6DF1_u5EA6"><a href="#2-__u6280_u672F_u7684_u6DF1_u5EA6" class="headerlink" title="2. 技术的深度"></a>2. 技术的深度</h2><p>　　技术的深度一向是我最看重的部分，当今任何一个技术领域都非常宽广，一个人要同时掌握那么多知识并且都深入几乎不可能，那都需要拼学习效率与工作年限了。而你曾经做过的东西，正在做的东西，是绝对可以了解得更深入的，一个对技术有好奇心，有技术热情的人，都不会仅仅停留在这个东西挺好用，而是会忍不住去探究它背后的技术原理，即便不是亲自去看源码，也会花点时间了解别人整理过的经验，所以单凭考察技术上的深度，就可以考察一个人是否对技术有热情，是否有技术好奇心等等这些很多大牛认为的所谓“优秀程序员的特征”。</p>
<p>　　之前曾看到过一句话：“一个人对他所做的事情了解得越深，他就能做的越好”。放在这里再合适不过了。</p>
<h2 id="3-__u6280_u672F_u7684_u5E7F_u5EA6"><a href="#3-__u6280_u672F_u7684_u5E7F_u5EA6" class="headerlink" title="3. 技术的广度"></a>3. 技术的广度</h2><p>　　深度是有了，还需要广度吗？我个人的理解是：深度是必要条件，广度是加分项。同样的有技术好奇心的优秀程序员，也不会满足于仅仅局限于自己的一亩三分地，工作之余，也会想要尝试一些其它的领域和方向，因为投入问题也许不够深入，但很多领域知识你知道与不知道，对你个人知识体系的形成关系很大。比如你要实现一个功能，在你当前熟悉的技术领域上很困难或者效果不佳，在你就要放弃时你的同事告诉你，这用一个简单sql语句就可以实现啦，为什么要搞得那么麻烦？这个例子虽然举得很蹩脚，但是我想意思大家应该已经明白了。知识越有广度，头脑里的技术体系就越完备，同样的问题，你就可以想到N个解，思考一下就得出最优解了，如果你听都没听过一些东西，就会经常说出“这个好难搞啊”，“这根本就不可能”，其实有的时候真是知识的局限问题，所谓的从0到1难，也是这个意思。</p>
<h2 id="4-__u903B_u8F91_u601D_u7EF4_u80FD_u529B"><a href="#4-__u903B_u8F91_u601D_u7EF4_u80FD_u529B" class="headerlink" title="4. 逻辑思维能力"></a>4. 逻辑思维能力</h2><p>　　这也是我比较看重的一点，这里并不是指那些臭名昭彰的脑经急转弯问题，而是通过交流观察，判断一个人表达观点逻辑是否清晰，回答问题是否有章法，这个很难描述，但如果你细心观察，你会发现很容易通过一些简单的交流，就可以看出一个人是否逻辑清晰。有时候你会觉得某个人表达沟通很不错，其实不是沟通的问题，是他说出去的话，经过了他大脑的条理清晰的整理，让你很容易就能明白。这种习惯不是一朝一夕就能养成的，所以面试过程中这点装不出来。</p>
<p>　　另外一个人如果逻辑清晰，而且反应又敏捷，语速很快，那是大大的加分项，恭喜你，碰到一个聪明人了。</p>
<h1 id="u5177_u4F53_u95EE_u54EA_u4E9B_u95EE_u9898_uFF1F"><a href="#u5177_u4F53_u95EE_u54EA_u4E9B_u95EE_u9898_uFF1F" class="headerlink" title="具体问哪些问题？"></a>具体问哪些问题？</h1><p>　　前面提到的是要重点考察的点，那么具体的Android开发，有没有一些通用的问题可以问的呢？我个人一般会从这几个角度考察候选人：</p>
<h2 id="1-_Android_u7ECF_u9A8C"><a href="#1-_Android_u7ECF_u9A8C" class="headerlink" title="1. Android经验"></a>1. Android经验</h2><p>　　如果不是校招，Android经验是必须的，我比较喜欢问一些基础概念与技术原理，比如Activity、View、Window的理解，各LaunchMode的使用场景，View的绘制流程，Touch事件机制，Android动画的原理，Handler, Looper的理解，Android跨进程通讯的方式，Binder的理解，Android Mashup设计的理解等等。</p>
<h2 id="2-_Java_u6C34_u5E73"><a href="#2-_Java_u6C34_u5E73" class="headerlink" title="2. Java水平"></a>2. Java水平</h2><p>　　基本上就是Effective Java那本书里提到的东西，如果你背完那本书里的问题，并且对答如流，没问题，就要你这样的。其实也会考察关于final用法，反射原理，注解原理，java编译过程，GC等一些常见问题。</p>
<h2 id="3-_IT_u57FA_u7840_u77E5_u8BC6"><a href="#3-_IT_u57FA_u7840_u77E5_u8BC6" class="headerlink" title="3. IT基础知识"></a>3. IT基础知识</h2><p>　　其实就是计算机科班学生学校里学到的一些东西，在校招时这块是重点，社招会放宽，但一些基本的常识是要有的，比如不少人都不知道http的get post有啥区别，https的那个s是什么意思，讲不清进程与线程的概念，不知道二分算法是个啥东西。这些简单问题的筛选，可以过滤一些所谓野路子的程序员，是不是科班出身不重要，搞这行就得对一些基本常识有概念，不然以后怎么愉快的交流呢？</p>
<h2 id="4-__u4EE3_u7801_u8D28_u91CF_u7684_u8BA4_u8BC6"><a href="#4-__u4EE3_u7801_u8D28_u91CF_u7684_u8BA4_u8BC6" class="headerlink" title="4. 代码质量的认识"></a>4. 代码质量的认识</h2><p>　　我们需要的是一个对代码味道有感觉的人，关于这点，看下《Clean Code》就够了，面试中这点其实不好考察，可以让他聊一聊对代码质量的认识，虽然不能排除对方夸夸其谈，至少想法不多，只能提到命名风格这一点的人是不符合要求的，也可以在写Code的环节中观察。</p>
<h2 id="5-__u6280_u672F_u89C6_u91CE"><a href="#5-__u6280_u672F_u89C6_u91CE" class="headerlink" title="5. 技术视野"></a>5. 技术视野</h2><p>　　比如对Android开发新技术的了解与学习，对其它流行技术领域的了解，这其实与我刚才提到的技术广度的考察有关，就我面试过程中，发现很多非互联网行业的从业人员，因为公司各种操蛋规定与公司技术氛围的原因，技术视野相当狭窄。</p>
<p>　　我个人对这点深有体会，2011年我还在传统行业从事软件研发，当时的公司因为担心技术信息泄露，不让上网，相当封闭，我个人虽然自认为已在那个行业内做到业内专家的级别，但总感觉哪里不对，有一天我很兴奋的打算跟身边同事聊一聊Android的时候，发现他们居然都不知Android为何物？2011年啊同志们，当时的震惊无法言表，深切感觉到需要作出改变了，毅然放弃多年行业积累，转战移动互联网，直到现在。时至今日，多年前的小伙伴也有很多混出了名党，开始走向人生巅峰，我也从来没有后悔当初做出的选择。</p>
<h2 id="6-__u6280_u672F_u60F3_u8C61_u529B"><a href="#6-__u6280_u672F_u60F3_u8C61_u529B" class="headerlink" title="6. 技术想象力"></a>6. 技术想象力</h2><p>　　一个优秀的技术人，如果知识的深度与广度足够，知识已成体系，那么他对于一些从未接触过的领域，也是可以做出足够合理的想象与判断，面试过程中如果问到一些领域候选人没有涉猎，这时候一般不用过多纠缠，但如果你想借这个问题考察下他的技术想象力，可以深入下去，比如问他：“你觉得这个东西应该是什么原理呢？”，“这个酷炫的控件，如果要你来做，你会怎么实现？”。在这方面表现出色的同学无疑是有深厚基础与足够广度的人。</p>
<h2 id="7-__u6280_u672F_u4E60_u60EF"><a href="#7-__u6280_u672F_u4E60_u60EF" class="headerlink" title="7. 技术习惯"></a>7. 技术习惯</h2><p>　　好的程序员都会有好的习惯，比如各种快捷键的熟练应用，各种命令行的掌握，一些提高开发效率的工具与习惯，碰到问题是baidu还是google，有没有做一些小工具帮助减少重复工作，工作之余有没有继续学习？有没有看什么不错的书等等，这些小细节很大程度上决定了程序员的开发效率，这也是为什么很多人说一个优秀程序员抵得上100个普通程序员，这也是重要原因之一。</p>
<h1 id="u9762_u8BD5_u540E_u7684_u53CD_u9988_3A"><a href="#u9762_u8BD5_u540E_u7684_u53CD_u9988_3A" class="headerlink" title="面试后的反馈:"></a>面试后的反馈:</h1><p>　　面试一般不止一轮，你需要给出你的反馈，多轮面试结果一起考量，减少误判的风险，反馈一般怎么写呢？以下是我的建议：</p>
<h2 id="1-__u9762_u8BD5_u7EAA_u5F55"><a href="#1-__u9762_u8BD5_u7EAA_u5F55" class="headerlink" title="1. 面试纪录"></a>1. 面试纪录</h2><p>　　面试过程中的完整纪录，尽量客观评价，让其它面试官知道你问了哪些问题，回答的怎么样，也避免了重复问题的尴尬。</p>
<h2 id="2-__u4F18_u70B9_u4E0E_u7F3A_u70B9"><a href="#2-__u4F18_u70B9_u4E0E_u7F3A_u70B9" class="headerlink" title="2. 优点与缺点"></a>2. 优点与缺点</h2><p>　　你的主观评价，亮点有哪些，你觉得哪些地方不够好？</p>
<h2 id="3-__u7EFC_u5408_u8BC4_u4EF7"><a href="#3-__u7EFC_u5408_u8BC4_u4EF7" class="headerlink" title="3. 综合评价"></a>3. 综合评价</h2><p>　　你对候选人的综合评价，hire或者no hire的根本原因，如果有些地方感觉没考察清楚，期望其它面试官继续加强考察，也可以写上。</p>
<h2 id="4-__u600E_u6837_u624D_u7ED9_u901A_u8FC7_uFF1F"><a href="#4-__u600E_u6837_u624D_u7ED9_u901A_u8FC7_uFF1F" class="headerlink" title="4. 怎样才给通过？"></a>4. 怎样才给通过？</h2><p>　　通过标准因人而异，每个人都有自己心中的bar, 但还是有些可直观考量的因素的：</p>
<ul>
<li><p>一是岗位的要求，不同的岗位标准当然不一样，校招与设招肯定也不一样。</p>
</li>
<li><p>二是岗位的紧急程度，兄弟们天天加班忙死了，赶紧找人过来帮忙吧哈哈。</p>
</li>
<li><p>三是候选人的年龄，大龄程序员莫怪，一把年纪了还跟刚毕业一两年的同事一个水平，说明成长太慢，做技术的潜力有限，这个大家应该能理解。</p>
</li>
<li><p>四是前面提到的做技术的深度，这个是必须的，广度也要有一些，视野不能太窄。</p>
</li>
<li><p>五是要有亮点，大家在面试的过程中要注意发掘亮点，有时候他问题很多但有一个足够的亮点也够了，用心观察也发现不了什么亮点的，就要注意了。</p>
</li>
</ul>
<p>　　说了这么水平多，其实最重要的就是一句话，问问你自己：<strong>你真的原意跟那个家伙一起并肩战斗吗？</strong></p>
<p><img src="/img/qrcode.jpg" alt="扫码关注我" title="扫码关注我"></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>   这是我在知乎上关于<a href="http://www.zhihu.com/question/19765032/answer/74361190" title="回答" target="_blank" rel="external">《面试时，]]>
    </summary>
    
      <category term="Android" scheme="http://tangtao.me/tags/Android/"/>
    
      <category term="面试" scheme="http://tangtao.me/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
</feed>
